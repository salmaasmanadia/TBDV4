# Generated by Django 4.1.7 on 2023-06-07 11:28

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('addressId', models.AutoField(primary_key=True, serialize=False)),
                ('streetName', models.TextField()),
                ('buildingNum', models.IntegerField()),
                ('regency', models.TextField()),
                ('state', models.TextField()),
            ],
            options={
                'db_table': 'address',
            },
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('bookId', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.TextField()),
                ('descriptions', models.TextField()),
                ('yearPublished', models.DateTimeField(null=True)),
                ('bookEdition', models.IntegerField()),
            ],
            options={
                'db_table': 'book',
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('customerId', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.TextField()),
                ('phoneNum', models.TextField()),
                ('email', models.TextField()),
                ('addressId', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='bookstore_api.address')),
            ],
            options={
                'db_table': 'customer',
            },
        ),
        migrations.CreateModel(
            name='Inventory',
            fields=[
                ('inventoryId', models.AutoField(primary_key=True, serialize=False)),
                ('bookId', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='bookstore_api.book')),
            ],
            options={
                'db_table': 'inventory',
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('paymentId', models.AutoField(primary_key=True, serialize=False)),
                ('method', models.TextField()),
                ('value', models.FloatField()),
            ],
            options={
                'db_table': 'payment',
            },
        ),
        migrations.CreateModel(
            name='Publisher',
            fields=[
                ('publisherId', models.AutoField(primary_key=True, serialize=False)),
                ('publisherName', models.TextField()),
                ('publisherLocation', models.TextField()),
            ],
            options={
                'db_table': 'publisher',
            },
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('staffId', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.TextField()),
                ('phoneNum', models.TextField()),
                ('email', models.TextField()),
                ('username', models.TextField()),
                ('password', models.TextField()),
                ('addressId', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='bookstore_api.address')),
            ],
            options={
                'db_table': 'staff',
            },
        ),
        migrations.CreateModel(
            name='Writer',
            fields=[
                ('writerId', models.AutoField(primary_key=True, serialize=False)),
                ('writerName', models.TextField()),
            ],
            options={
                'db_table': 'writer',
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('transactionId', models.AutoField(primary_key=True, serialize=False)),
                ('time', models.DateTimeField(null=True)),
                ('customerId', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='bookstore_api.customer')),
                ('inventoryId', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='bookstore_api.inventory')),
                ('paymentId', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='bookstore_api.payment')),
            ],
            options={
                'db_table': 'transaction',
            },
        ),
        migrations.CreateModel(
            name='Store',
            fields=[
                ('storeId', models.AutoField(primary_key=True, serialize=False)),
                ('addressId', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='bookstore_api.address')),
                ('staffId', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='bookstore_api.staff')),
            ],
            options={
                'db_table': 'store',
            },
        ),
        migrations.AddField(
            model_name='payment',
            name='staffId',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='bookstore_api.staff'),
        ),
        migrations.AddField(
            model_name='inventory',
            name='storeId',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='bookstore_api.store'),
        ),
        migrations.AddField(
            model_name='book',
            name='publisherId',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='bookstore_api.publisher'),
        ),
        migrations.AddField(
            model_name='book',
            name='writerId',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='bookstore_api.writer'),
        ),
    ]
